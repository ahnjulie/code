#define _CRT_SECURE_NO_WARNINGS  
#include <stdio.h>
#include <stdlib.h>

struct node
{
	int seq;
	int int_data;
	char char_data;
	char string_data[10];
	struct node* left_next;
	struct node* right_next;
};


int seq = 0;

void insert_node(struct node* front, struct node* rear)
{
	struct node* new_node = malloc(sizeof(struct node));

	int int_data;
	char char_data;
	char string_data[10] = { 0, };

	printf("int: ");
	scanf("%d", &int_data);

	printf("char: ");
	scanf(" %c", &char_data);	//char_data = getchar();
	printf("str: ");
	scanf(" %s", &string_data); //gets(string_data);

	memset(new_node, 0, sizeof(new_node));
	new_node->left_next = NULL;
	new_node->right_next = NULL;
	new_node->seq = ++seq;
	new_node->int_data = int_data;
	new_node->char_data = char_data;
	strcpy(new_node->string_data, string_data);

	if (front->right_next == NULL)
	{
		front->right_next = new_node;
		rear->left_next = new_node;
	}
	else
	{
		(rear->left_next)->right_next = new_node;
		new_node->left_next = rear->left_next;
		rear->left_next = new_node;
	}

	return;
}

void delete_node(struct node* front, struct node* rear)
{
	struct node* pos = front->right_next;

	if (pos == NULL)
	{
		printf("XXX\n");
	}
	else if (pos->right_next == NULL)
	{
		front->right_next = NULL;
		rear->left_next = NULL;
		free(pos);
	}
	else
	{
		front->right_next = pos->right_next;
		pos->right_next->left_next = NULL;
	}
}

void print_list(struct node* front)
{
	struct node* pos = front->right_next;

	printf("\n****PRINT****\n");
	while (pos != NULL)
	{
		printf("seq: %d \n", (*pos).seq);
		printf("int: %d \n", pos->int_data);
		printf("char: %d\n", pos->char_data);
		printf("str: %d\n\n", pos->string_data);
		pos = pos->right_next;
	}
}

int main(void)
{
	int menu = 0;
	struct node* front = malloc(sizeof(struct node));
	struct node* rear = malloc(sizeof(struct node));

	memset(front, 0, sizeof(front));
	memset(rear, 0, sizeof(rear));
	front->left_next = front->right_next = NULL;
	rear->left_next = rear->right_next = NULL;

	while (1)
	{
		printf("insert menu: ");
		scanf("%d", &menu);
	
		if (menu == 1)
		{
			insert_node(front, rear);
		}
		else if (menu == 2)
		{
			delete_node(front, rear);
		}
		else if (menu == 3)
		{
			print_list(front);
		}
		else
		{
			break;
		}
	}
}
